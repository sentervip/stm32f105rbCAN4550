<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\CanDemo_15.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\CanDemo_15.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Apr 25 13:45:35 2020
<BR><P>
<H3>Maximum Stack Usage =        240 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Init_CAN &rArr; TCAN4x5x_MCAN_WriteXIDFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[43]">CAN2_RX0_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[44]">CAN2_RX1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[45]">CAN2_SCE_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[42]">CAN2_TX_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel4_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[40]">ETH_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[41]">ETH_WKUP_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from tcan-main.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from tcan-main.o(i.EXTI4_IRQHandler) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[46]">OTG_FS_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[36]">SPI3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_cl.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[35]">TIM5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[39]">TIM6_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3a]">TIM7_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[49]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_cl.o(.text)
 <LI><a href="#[47]">main</a> from tcan-main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[90]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[91]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[95]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>AHB_READ_32</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, tcan4x5x_spi.o(i.AHB_READ_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_START
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_READ
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_END
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Configure
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteXIDFilter
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteSIDFilter
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadInterrupts
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_EnableProtectedRegisters
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_DisableProtectedRegisters
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureNominalTiming_Simple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureGlobalFilter
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureDataTiming_Simple
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureCCCRRegister
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_SetMode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ReadMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ReadInterrupts
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ConfigureInterruptEnable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_Configure
</UL>

<P><STRONG><a name="[53]"></a>AHB_READ_BURST_END</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tcan4x5x_spi.o(i.AHB_READ_BURST_END))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AHB_READ_BURST_END
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>

<P><STRONG><a name="[52]"></a>AHB_READ_BURST_READ</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tcan4x5x_spi.o(i.AHB_READ_BURST_READ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>

<P><STRONG><a name="[51]"></a>AHB_READ_BURST_START</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tcan4x5x_spi.o(i.AHB_READ_BURST_START))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AHB_READ_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>

<P><STRONG><a name="[57]"></a>AHB_WRITE_32</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, tcan4x5x_spi.o(i.AHB_WRITE_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_WRITE
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_START
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_END
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Configure
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteXIDFilter
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteSIDFilter
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TransmitBufferContents
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_EnableProtectedRegisters
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_DisableProtectedRegisters
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureNominalTiming_Simple
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureInterruptEnable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureGlobalFilter
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureDataTiming_Simple
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureCCCRRegister
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ClearInterruptsAll
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ClearInterrupts
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_SetMode
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ConfigureInterruptEnable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_Configure
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ClearSPIERR
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ClearInterrupts
</UL>

<P><STRONG><a name="[5a]"></a>AHB_WRITE_BURST_END</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tcan4x5x_spi.o(i.AHB_WRITE_BURST_END))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AHB_WRITE_BURST_END
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>

<P><STRONG><a name="[58]"></a>AHB_WRITE_BURST_START</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tcan4x5x_spi.o(i.AHB_WRITE_BURST_START))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>

<P><STRONG><a name="[59]"></a>AHB_WRITE_BURST_WRITE</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tcan4x5x_spi.o(i.AHB_WRITE_BURST_WRITE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AHB_WRITE_BURST_WRITE &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>

<P><STRONG><a name="[5b]"></a>Blink_Led_Process</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tcan-main.o(i.Blink_Led_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Blink_Led_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>EUSCI_B_SPI_transmitData</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tcan4x5x_spi.o(i.EUSCI_B_SPI_transmitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_WRITE
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_START
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_START
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_READ
</UL>

<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tcan-main.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EXTI15_10_IRQHandler &rArr; TCAN4x5x_MCAN_TransmitBufferContents &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TransmitBufferContents
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tcan-main.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>EXTI_Configuration</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, tcan-main.o(i.EXTI_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
</UL>

<P><STRONG><a name="[5f]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[64]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[7e]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
</UL>

<P><STRONG><a name="[7d]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
</UL>

<P><STRONG><a name="[56]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink_Led_Process
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_START
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_START
</UL>

<P><STRONG><a name="[54]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink_Led_Process
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_END
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_END
</UL>

<P><STRONG><a name="[68]"></a>Init_CAN</STRONG> (Thumb, 612 bytes, Stack size 56 bytes, tcan-main.o(i.Init_CAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Init_CAN &rArr; TCAN4x5x_MCAN_WriteXIDFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Set_Baudrate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Configure
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteXIDFilter
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteSIDFilter
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_EnableProtectedRegisters
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_DisableProtectedRegisters
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureNominalTiming_Simple
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureInterruptEnable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureGlobalFilter
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureDataTiming_Simple
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureCCCRRegister
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ClearInterruptsAll
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_SetMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ReadInterrupts
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ConfigureInterruptEnable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_Configure
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ClearSPIERR
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ClearInterrupts
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Init_GPIO</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, tcan-main.o(i.Init_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init_GPIO &rArr; EXTI_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>Init_SPI</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, tcan-main.o(i.Init_SPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Init_SPI &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[66]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[63]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[81]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
</UL>

<P><STRONG><a name="[5c]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>

<P><STRONG><a name="[5e]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>

<P><STRONG><a name="[5d]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EUSCI_B_SPI_transmitData
</UL>

<P><STRONG><a name="[80]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
</UL>

<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>TCAN4x5x_Device_ClearInterrupts</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_Device_ClearInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TCAN4x5x_Device_ClearInterrupts &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[69]"></a>TCAN4x5x_Device_ClearSPIERR</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_Device_ClearSPIERR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TCAN4x5x_Device_ClearSPIERR &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[79]"></a>TCAN4x5x_Device_Configure</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, tcan4550.o(i.TCAN4x5x_Device_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TCAN4x5x_Device_Configure &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[6a]"></a>TCAN4x5x_Device_ConfigureInterruptEnable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_Device_ConfigureInterruptEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_Device_ConfigureInterruptEnable &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[6b]"></a>TCAN4x5x_Device_ReadInterrupts</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_Device_ReadInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TCAN4x5x_Device_ReadInterrupts &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[84]"></a>TCAN4x5x_Device_ReadMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_Device_ReadMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TCAN4x5x_Device_ReadMode &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ConfigureCCCRRegister
</UL>

<P><STRONG><a name="[7a]"></a>TCAN4x5x_Device_SetMode</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_Device_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_Device_SetMode &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[85]"></a>TCAN4x5x_MCAN_ClearInterrupts</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ClearInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TCAN4x5x_MCAN_ClearInterrupts &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>TCAN4x5x_MCAN_ClearInterruptsAll</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ClearInterruptsAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TCAN4x5x_MCAN_ClearInterruptsAll &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[6f]"></a>TCAN4x5x_MCAN_ConfigureCCCRRegister</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ConfigureCCCRRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TCAN4x5x_MCAN_ConfigureCCCRRegister &rArr; TCAN4x5x_Device_ReadMode &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ReadMode
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[72]"></a>TCAN4x5x_MCAN_ConfigureDataTiming_Simple</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ConfigureDataTiming_Simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TCAN4x5x_MCAN_ConfigureDataTiming_Simple &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[70]"></a>TCAN4x5x_MCAN_ConfigureGlobalFilter</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ConfigureGlobalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_MCAN_ConfigureGlobalFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[76]"></a>TCAN4x5x_MCAN_ConfigureInterruptEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ConfigureInterruptEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TCAN4x5x_MCAN_ConfigureInterruptEnable &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[71]"></a>TCAN4x5x_MCAN_ConfigureNominalTiming_Simple</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ConfigureNominalTiming_Simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_MCAN_ConfigureNominalTiming_Simple &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[89]"></a>TCAN4x5x_MCAN_DLCtoBytes</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tcan4550.o(i.TCAN4x5x_MCAN_DLCtoBytes))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
</UL>

<P><STRONG><a name="[75]"></a>TCAN4x5x_MCAN_DisableProtectedRegisters</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_DisableProtectedRegisters))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_MCAN_DisableProtectedRegisters &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[6e]"></a>TCAN4x5x_MCAN_EnableProtectedRegisters</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_EnableProtectedRegisters))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_MCAN_EnableProtectedRegisters &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[86]"></a>TCAN4x5x_MCAN_ReadInterrupts</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ReadInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TCAN4x5x_MCAN_ReadInterrupts &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>TCAN4x5x_MCAN_ReadNextFIFO</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, tcan4550.o(i.TCAN4x5x_MCAN_ReadNextFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TCAN4x5x_MCAN_ReadNextFIFO &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TXRXESC_DataByteValue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_DLCtoBytes
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_START
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_READ
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_BURST_END
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>TCAN4x5x_MCAN_TXRXESC_DataByteValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tcan4550.o(i.TCAN4x5x_MCAN_TXRXESC_DataByteValue))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MRAM_Configure
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
</UL>

<P><STRONG><a name="[61]"></a>TCAN4x5x_MCAN_TransmitBufferContents</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MCAN_TransmitBufferContents))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TCAN4x5x_MCAN_TransmitBufferContents &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>TCAN4x5x_MCAN_WriteSIDFilter</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tcan4550.o(i.TCAN4x5x_MCAN_WriteSIDFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TCAN4x5x_MCAN_WriteSIDFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[8a]"></a>TCAN4x5x_MCAN_WriteTXBuffer</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, tcan4550.o(i.TCAN4x5x_MCAN_WriteTXBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TCAN4x5x_MCAN_WriteTXBuffer &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TXRXESC_DataByteValue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_DLCtoBytes
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_WRITE
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_START
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_BURST_END
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>TCAN4x5x_MCAN_WriteXIDFilter</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, tcan4550.o(i.TCAN4x5x_MCAN_WriteXIDFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TCAN4x5x_MCAN_WriteXIDFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[73]"></a>TCAN4x5x_MRAM_Clear</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, tcan4550.o(i.TCAN4x5x_MRAM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TCAN4x5x_MRAM_Clear &rArr; AHB_WRITE_32 &rArr; AHB_WRITE_BURST_START &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[74]"></a>TCAN4x5x_MRAM_Configure</STRONG> (Thumb, 602 bytes, Stack size 24 bytes, tcan4550.o(i.TCAN4x5x_MRAM_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TCAN4x5x_MRAM_Configure &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TXRXESC_DataByteValue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_WRITE_32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[6d]"></a>TCAN4x5x_Set_Baudrate</STRONG> (Thumb, 300 bytes, Stack size 0 bytes, tcan-main.o(i.TCAN4x5x_Set_Baudrate))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[98]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 534 bytes, Stack size 96 bytes, tcan-main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main &rArr; Init_CAN &rArr; TCAN4x5x_MCAN_WriteXIDFilter &rArr; AHB_READ_32 &rArr; AHB_READ_BURST_READ &rArr; EUSCI_B_SPI_transmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink_Led_Process
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_WriteTXBuffer
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_TransmitBufferContents
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadNextFIFO
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ReadInterrupts
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_MCAN_ClearInterrupts
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ReadInterrupts
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCAN4x5x_Device_ClearSPIERR
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_READ_32
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[82]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[83]"></a>SetSysClockTo72</STRONG> (Thumb, 264 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
